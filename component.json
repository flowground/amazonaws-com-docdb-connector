{
    "title": "Amazon DocumentDB with MongoDB compatibility",
    "description": "Amazon DocumentDB API documentation",
    "docsUrl": "https://aws.amazon.com/rds/",
    "url": "https://api.apis.guru/v2/specs/amazonaws.com/docdb/2014-10-31/swagger.json",
    "envVars": {},
    "credentials": {
        "fields": {
            "server": {
                "label": "Server",
                "viewClass": "SelectView",
                "model": [
                    "https://rds.amazonaws.com/",
                    "http://rds.amazonaws.com/",
                    "--- Custom URL"
                ],
                "required": true
            },
            "otherServer": {
                "label": "Custom Server URL",
                "viewClass": "TextFieldView"
            },
            "auth_hmac": {
                "label": "Authorization (hmac)",
                "viewClass": "TextFieldView",
                "note": "Amazon Signature authorization v4"
            }
        }
    },
    "triggers": {
        "startFlow": {
            "main": "./lib/triggers/startFlow.js",
            "type": "polling",
            "title": "Start Flow",
            "fields": {}
        }
    },
    "actions": {
        "AddTagsToResource": {
            "main": "./lib/actions/AddTagsToResource.js",
            "title": "AddTagsToResource",
            "description": "Adds metadata tags to an Amazon DocumentDB resource. You can use these tags with cost allocation reporting to track costs that are associated with Amazon DocumentDB resources. or in a <code>Condition</code> statement in an AWS Identity and Access Management (IAM) policy for Amazon DocumentDB.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/AddTagsToResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ApplyPendingMaintenanceAction": {
            "main": "./lib/actions/ApplyPendingMaintenanceAction.js",
            "title": "ApplyPendingMaintenanceAction",
            "description": "Applies a pending maintenance action to a resource (for example, to a DB instance).",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ApplyPendingMaintenanceAction.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CopyDBClusterParameterGroup": {
            "main": "./lib/actions/CopyDBClusterParameterGroup.js",
            "title": "CopyDBClusterParameterGroup",
            "description": "Copies the specified DB cluster parameter group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CopyDBClusterParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CopyDBClusterSnapshot": {
            "main": "./lib/actions/CopyDBClusterSnapshot.js",
            "title": "CopyDBClusterSnapshot",
            "description": "Copies a snapshot of a DB cluster.\n\nTo copy a DB cluster snapshot from a shared manual DB cluster snapshot, \nSourceDBClusterSnapshotIdentifier must be the Amazon Resource Name (ARN) of the\nshared DB cluster snapshot.\n\nTo cancel the copy operation after it is in progress, delete the target DB\ncluster snapshot identified by TargetDBClusterSnapshotIdentifier while that DB\ncluster snapshot is in the copying status.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CopyDBClusterSnapshot.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDBCluster": {
            "main": "./lib/actions/CreateDBCluster.js",
            "title": "CreateDBCluster",
            "description": "Creates a new Amazon DocumentDB DB cluster.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDBCluster.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDBClusterParameterGroup": {
            "main": "./lib/actions/CreateDBClusterParameterGroup.js",
            "title": "CreateDBClusterParameterGroup",
            "description": "Creates a new DB cluster parameter group.\n\nParameters in a DB cluster parameter group apply to all of the instances in a DB\ncluster.\n\nA DB cluster parameter group is initially created with the default parameters\nfor the database engine used by instances in the DB cluster. To provide custom\nvalues for any of the parameters, you must modify the group after you create it.\nAfter you create a DB cluster parameter group, you must associate it with your\nDB cluster. For the new DB cluster parameter group and associated settings to\ntake effect, you must then reboot the DB instances in the DB cluster without\nfailover.\n\nAfter you create a DB cluster parameter group, you should wait at least 5\nminutes before creating your first DB cluster that uses that DB cluster\nparameter group as the default parameter group. This allows Amazon DocumentDB to\nfully complete the create action before the DB cluster parameter group is used\nas the default for a new DB cluster. This step is especially important for\nparameters that are critical when creating the default database for a DB\ncluster, such as the character set for the default database defined by the \ncharacter_set_database parameter.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDBClusterParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDBClusterSnapshot": {
            "main": "./lib/actions/CreateDBClusterSnapshot.js",
            "title": "CreateDBClusterSnapshot",
            "description": "Creates a snapshot of a DB cluster. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDBClusterSnapshot.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDBInstance": {
            "main": "./lib/actions/CreateDBInstance.js",
            "title": "CreateDBInstance",
            "description": "Creates a new DB instance.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDBInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "CreateDBSubnetGroup": {
            "main": "./lib/actions/CreateDBSubnetGroup.js",
            "title": "CreateDBSubnetGroup",
            "description": "Creates a new DB subnet group. DB subnet groups must contain at least one subnet in at least two Availability Zones in the AWS Region.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/CreateDBSubnetGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDBCluster": {
            "main": "./lib/actions/DeleteDBCluster.js",
            "title": "DeleteDBCluster",
            "description": "Deletes a previously provisioned DB cluster. When you delete a DB cluster, all\nautomated backups for that DB cluster are deleted and can't be recovered. Manual\nDB cluster snapshots of the specified DB cluster are not deleted.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDBCluster.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDBClusterParameterGroup": {
            "main": "./lib/actions/DeleteDBClusterParameterGroup.js",
            "title": "DeleteDBClusterParameterGroup",
            "description": "Deletes a specified DB cluster parameter group. The DB cluster parameter group to be deleted can't be associated with any DB clusters.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDBClusterParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDBClusterSnapshot": {
            "main": "./lib/actions/DeleteDBClusterSnapshot.js",
            "title": "DeleteDBClusterSnapshot",
            "description": "Deletes a DB cluster snapshot. If the snapshot is being copied, the copy\noperation is terminated.\n\nThe DB cluster snapshot must be in the available state to be deleted.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDBClusterSnapshot.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDBInstance": {
            "main": "./lib/actions/DeleteDBInstance.js",
            "title": "DeleteDBInstance",
            "description": "Deletes a previously provisioned DB instance. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDBInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DeleteDBSubnetGroup": {
            "main": "./lib/actions/DeleteDBSubnetGroup.js",
            "title": "DeleteDBSubnetGroup",
            "description": "Deletes a DB subnet group.\n\nThe specified database subnet group must not be associated with any DB\ninstances.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DeleteDBSubnetGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBClusterParameterGroups": {
            "main": "./lib/actions/DescribeDBClusterParameterGroups.js",
            "title": "DescribeDBClusterParameterGroups",
            "description": "Returns a list of <code>DBClusterParameterGroup</code> descriptions. If a <code>DBClusterParameterGroupName</code> parameter is specified, the list contains only the description of the specified DB cluster parameter group. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBClusterParameterGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBClusterParameters": {
            "main": "./lib/actions/DescribeDBClusterParameters.js",
            "title": "DescribeDBClusterParameters",
            "description": "Returns the detailed parameter list for a particular DB cluster parameter group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBClusterParameters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBClusterSnapshotAttributes": {
            "main": "./lib/actions/DescribeDBClusterSnapshotAttributes.js",
            "title": "DescribeDBClusterSnapshotAttributes",
            "description": "Returns a list of DB cluster snapshot attribute names and values for a manual DB\ncluster snapshot.\n\nWhen you share snapshots with other AWS accounts, \nDescribeDBClusterSnapshotAttributes returns the restore attribute and a list of\nIDs for the AWS accounts that are authorized to copy or restore the manual DB\ncluster snapshot. If all is included in the list of values for the restore \nattribute, then the manual DB cluster snapshot is public and can be copied or\nrestored by all AWS accounts.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBClusterSnapshotAttributes.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBClusterSnapshots": {
            "main": "./lib/actions/DescribeDBClusterSnapshots.js",
            "title": "DescribeDBClusterSnapshots",
            "description": "Returns information about DB cluster snapshots. This API operation supports pagination.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBClusterSnapshots.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBClusters": {
            "main": "./lib/actions/DescribeDBClusters.js",
            "title": "DescribeDBClusters",
            "description": "Returns information about provisioned Amazon DocumentDB DB clusters. This API operation supports pagination.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBClusters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBEngineVersions": {
            "main": "./lib/actions/DescribeDBEngineVersions.js",
            "title": "DescribeDBEngineVersions",
            "description": "Returns a list of the available DB engines.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBEngineVersions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBInstances": {
            "main": "./lib/actions/DescribeDBInstances.js",
            "title": "DescribeDBInstances",
            "description": "Returns information about provisioned Amazon DocumentDB instances. This API supports pagination.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBInstances.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeDBSubnetGroups": {
            "main": "./lib/actions/DescribeDBSubnetGroups.js",
            "title": "DescribeDBSubnetGroups",
            "description": "Returns a list of <code>DBSubnetGroup</code> descriptions. If a <code>DBSubnetGroupName</code> is specified, the list will contain only the descriptions of the specified <code>DBSubnetGroup</code>.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeDBSubnetGroups.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeEngineDefaultClusterParameters": {
            "main": "./lib/actions/DescribeEngineDefaultClusterParameters.js",
            "title": "DescribeEngineDefaultClusterParameters",
            "description": "Returns the default engine and system parameter information for the cluster database engine.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeEngineDefaultClusterParameters.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeEventCategories": {
            "main": "./lib/actions/DescribeEventCategories.js",
            "title": "DescribeEventCategories",
            "description": "Displays a list of categories for all event source types, or, if specified, for a specified source type. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeEventCategories.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeEvents": {
            "main": "./lib/actions/DescribeEvents.js",
            "title": "DescribeEvents",
            "description": "Returns events related to DB instances, DB security groups, DB snapshots, and DB parameter groups for the past 14 days. You can obtain events specific to a particular DB instance, DB security group, DB snapshot, or DB parameter group by providing the name as a parameter. By default, the events of the past hour are returned.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeEvents.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribeOrderableDBInstanceOptions": {
            "main": "./lib/actions/DescribeOrderableDBInstanceOptions.js",
            "title": "DescribeOrderableDBInstanceOptions",
            "description": "Returns a list of orderable DB instance options for the specified engine.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribeOrderableDBInstanceOptions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "DescribePendingMaintenanceActions": {
            "main": "./lib/actions/DescribePendingMaintenanceActions.js",
            "title": "DescribePendingMaintenanceActions",
            "description": "Returns a list of resources (for example, DB instances) that have at least one pending maintenance action.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/DescribePendingMaintenanceActions.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "FailoverDBCluster": {
            "main": "./lib/actions/FailoverDBCluster.js",
            "title": "FailoverDBCluster",
            "description": "Forces a failover for a DB cluster.\n\nA failover for a DB cluster promotes one of the Amazon DocumentDB replicas\n(read-only instances) in the DB cluster to be the primary instance (the cluster\nwriter).\n\nIf the primary instance fails, Amazon DocumentDB automatically fails over to an\nAmazon DocumentDB replica, if one exists. You can force a failover when you want\nto simulate a failure of a primary instance for testing.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/FailoverDBCluster.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ListTagsForResource": {
            "main": "./lib/actions/ListTagsForResource.js",
            "title": "ListTagsForResource",
            "description": "Lists all tags on an Amazon DocumentDB resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ListTagsForResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyDBCluster": {
            "main": "./lib/actions/ModifyDBCluster.js",
            "title": "ModifyDBCluster",
            "description": "Modifies a setting for an Amazon DocumentDB DB cluster. You can change one or more database configuration parameters by specifying these parameters and the new values in the request. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyDBCluster.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyDBClusterParameterGroup": {
            "main": "./lib/actions/ModifyDBClusterParameterGroup.js",
            "title": "ModifyDBClusterParameterGroup",
            "description": " Modifies the parameters of a DB cluster parameter group. To modify more than\none parameter, submit a list of the following: ParameterName, ParameterValue,\nand ApplyMethod. A maximum of 20 parameters can be modified in a single request. \n\nChanges to dynamic parameters are applied immediately. Changes to static\nparameters require a reboot or maintenance window before the change can take\neffect.\n\nAfter you create a DB cluster parameter group, you should wait at least 5\nminutes before creating your first DB cluster that uses that DB cluster\nparameter group as the default parameter group. This allows Amazon DocumentDB to\nfully complete the create action before the parameter group is used as the\ndefault for a new DB cluster. This step is especially important for parameters\nthat are critical when creating the default database for a DB cluster, such as\nthe character set for the default database defined by the character_set_database \nparameter.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyDBClusterParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyDBClusterSnapshotAttribute": {
            "main": "./lib/actions/ModifyDBClusterSnapshotAttribute.js",
            "title": "ModifyDBClusterSnapshotAttribute",
            "description": "Adds an attribute and values to, or removes an attribute and values from, a\nmanual DB cluster snapshot.\n\nTo share a manual DB cluster snapshot with other AWS accounts, specify restore \nas the AttributeName, and use the ValuesToAdd parameter to add a list of IDs of\nthe AWS accounts that are authorized to restore the manual DB cluster snapshot.\nUse the value all to make the manual DB cluster snapshot public, which means\nthat it can be copied or restored by all AWS accounts. Do not add the all value\nfor any manual DB cluster snapshots that contain private information that you\ndon't want available to all AWS accounts. If a manual DB cluster snapshot is\nencrypted, it can be shared, but only by specifying a list of authorized AWS\naccount IDs for the ValuesToAdd parameter. You can't use all as a value for that\nparameter in this case.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyDBClusterSnapshotAttribute.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyDBInstance": {
            "main": "./lib/actions/ModifyDBInstance.js",
            "title": "ModifyDBInstance",
            "description": "Modifies settings for a DB instance. You can change one or more database configuration parameters by specifying these parameters and the new values in the request.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyDBInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ModifyDBSubnetGroup": {
            "main": "./lib/actions/ModifyDBSubnetGroup.js",
            "title": "ModifyDBSubnetGroup",
            "description": "Modifies an existing DB subnet group. DB subnet groups must contain at least one subnet in at least two Availability Zones in the AWS Region.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ModifyDBSubnetGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RebootDBInstance": {
            "main": "./lib/actions/RebootDBInstance.js",
            "title": "RebootDBInstance",
            "description": "You might need to reboot your DB instance, usually for maintenance reasons. For\nexample, if you make certain changes, or if you change the DB cluster parameter\ngroup that is associated with the DB instance, you must reboot the instance for\nthe changes to take effect. \n\nRebooting a DB instance restarts the database engine service. Rebooting a DB\ninstance results in a momentary outage, during which the DB instance status is\nset to rebooting.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RebootDBInstance.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RemoveTagsFromResource": {
            "main": "./lib/actions/RemoveTagsFromResource.js",
            "title": "RemoveTagsFromResource",
            "description": "Removes metadata tags from an Amazon DocumentDB resource.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RemoveTagsFromResource.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "ResetDBClusterParameterGroup": {
            "main": "./lib/actions/ResetDBClusterParameterGroup.js",
            "title": "ResetDBClusterParameterGroup",
            "description": " Modifies the parameters of a DB cluster parameter group to the default value.\nTo reset specific parameters, submit a list of the following: ParameterName and \nApplyMethod. To reset the entire DB cluster parameter group, specify the \nDBClusterParameterGroupName and ResetAllParameters parameters. \n\n When you reset the entire group, dynamic parameters are updated immediately and\nstatic parameters are set to pending-reboot to take effect on the next DB\ninstance reboot.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/ResetDBClusterParameterGroup.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RestoreDBClusterFromSnapshot": {
            "main": "./lib/actions/RestoreDBClusterFromSnapshot.js",
            "title": "RestoreDBClusterFromSnapshot",
            "description": "Creates a new DB cluster from a DB snapshot or DB cluster snapshot.\n\nIf a DB snapshot is specified, the target DB cluster is created from the source\nDB snapshot with a default configuration and default security group.\n\nIf a DB cluster snapshot is specified, the target DB cluster is created from the\nsource DB cluster restore point with the same configuration as the original\nsource DB cluster, except that the new DB cluster is created with the default\nsecurity group.",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RestoreDBClusterFromSnapshot.in.json",
                "out": {
                    "type": "object"
                }
            }
        },
        "RestoreDBClusterToPointInTime": {
            "main": "./lib/actions/RestoreDBClusterToPointInTime.js",
            "title": "RestoreDBClusterToPointInTime",
            "description": "Restores a DB cluster to an arbitrary point in time. Users can restore to any point in time before <code>LatestRestorableTime</code> for up to <code>BackupRetentionPeriod</code> days. The target DB cluster is created from the source DB cluster with the same configuration as the original DB cluster, except that the new DB cluster is created with the default DB security group. ",
            "fields": {
                "verbose": {
                    "viewClass": "CheckBoxView",
                    "label": "Debug this step (log more data)"
                }
            },
            "metadata": {
                "in": "./lib/schemas/RestoreDBClusterToPointInTime.in.json",
                "out": {
                    "type": "object"
                }
            }
        }
    }
}